name: Deploy Production Environment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deployment_infrastructure:
    name: Provision deployment Infrastructure
    runs-on: ubuntu-latest
    environment: production
    outputs:
      s3_bucket: ${{ steps.tofu_output.outputs.S3_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - run: tofu init
        working-directory: infra/deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: tofu apply -auto-approve
        working-directory: infra/deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Get Tofu Outputs
        working-directory: infra/deploy
        id: tofu_output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          tofu output -raw s3_bucket_id
          echo "S3_BUCKET=$(tofu output -raw s3_bucket_id)" >> $GITHUB_OUTPUT

  build_and_upload:
    needs: [deployment_infrastructure]
    name: Build and Upload
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '27'
          elixir-version: '1.17.3'
      - run: |
          mix local.hex --force
          mix deps.get
          mix release
        env:
          MIX_ENV: "prod"
      - name: Create tarball
        run: tar -czf app.tar.gz -C _build/prod/rel/altabarra .
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: |
          aws s3 cp app.tar.gz s3://${{ needs.deployment_infrastructure.outputs.s3_bucket }}/app.tar.gz

  deploy_application:
    needs: [deployment_infrastructure, build_and_upload]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - run: tofu init
        working-directory: infra/app
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: tofu apply -auto-approve
        working-directory: infra/app
        env:
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_app_bucket: ${{ needs.deployment_infrastructure.outputs.tofu_output.s3_bucket}}
          TF_VAR_public_ec2_key: ${{ vars.PUBLIC_EC2_KEY }}
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_secret_key_base: ${{ secrets.PHX_SECRET_KEY_BASE }}
