name: Deploy Production Environment

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deployment_infrastructure:
    name: Provision deployment Infrastructure
    runs-on: ubuntu-latest
    environment: production
    outputs:
      s3_bucket: ${{ steps.tofu_output.S3_BUCKET }}
    steps:
      - uses: actions/checkout@v4
      - uses: opentofu/setup-opentofu@v1
      - run: tofu init
        working-directory: infra/deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: tofu apply -auto-approve
        working-directory: infra/deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Get Tofu Outputs
        working-directory: infra/deploy
        id: tofu_output
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "S3_BUCKET=$(tofu output -raw s3_bucket_id)" >> $GITHUB_OUTPUT

  build_and_upload:
    needs: deployment_infrastructure
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
      - run: |
          mix local.hex --force
          mix deps.get
          mix release
        env:
          ENV: "PROD"
      - name: Create tarball
        run: tar -czf app.tar.gz -C _build/dev/rel/altabarra
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp app.tar.gz s3://${{ needs.deployment_infrastructure.outputs.tofu_output.s3_bucket}}/app.tar.gz
